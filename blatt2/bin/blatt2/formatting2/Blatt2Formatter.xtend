/*
 * generated by Xtext 2.17.0
 */
package blatt2.formatting2

import Allocation.AllocationContext
import Assembly.AssemblyContext
import blatt2.services.Blatt2GrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class Blatt2Formatter extends AbstractFormatter2 {
	
	@Inject extension Blatt2GrammarAccess

	def dispatch void format(AllocationContext allocationContext, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (container : allocationContext.targetContainer) {
			container.format
		}
	}

	def dispatch void format(AssemblyContext assemblyContext, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (role : assemblyContext.providedRole) {
			role.format
		}
		for (component : assemblyContext.component) {
			component.format
		}
	}
	
	// TODO: implement for Component, Interface, Service, BehaviorDescription, CompositeComponent
}
