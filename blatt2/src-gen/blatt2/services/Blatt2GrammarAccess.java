/*
 * generated by Xtext 2.17.1
 */
package blatt2.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class Blatt2GrammarAccess extends AbstractGrammarElementFinder {
	
	public class AllocationContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.AllocationContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllocationContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAllocatedAssemblyContextKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAllocatedAssemblyContextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAllocatedAssemblyContextAssemblyContextCrossReference_4_0 = (CrossReference)cAllocatedAssemblyContextAssignment_4.eContents().get(0);
		private final RuleCall cAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1 = (RuleCall)cAllocatedAssemblyContextAssemblyContextCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAllocatedAssemblyContextAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAllocatedAssemblyContextAssemblyContextCrossReference_5_1_0 = (CrossReference)cAllocatedAssemblyContextAssignment_5_1.eContents().get(0);
		private final RuleCall cAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_5_1_0_1 = (RuleCall)cAllocatedAssemblyContextAssemblyContextCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTargetContainerKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cTargetContainerAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTargetContainerContainerParserRuleCall_7_2_0 = (RuleCall)cTargetContainerAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cTargetContainerAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cTargetContainerContainerParserRuleCall_7_3_1_0 = (RuleCall)cTargetContainerAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AllocationContext Allocation::AllocationContext:
		//	'AllocationContext'
		//	'{'
		//	'allocatedAssemblyContext' '(' allocatedAssemblyContext+=[Assembly::AssemblyContext|EString] (","
		//	allocatedAssemblyContext+=[Assembly::AssemblyContext|EString])* ')' ('targetContainer' '{' targetContainer+=Container
		//	("," targetContainer+=Container)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'AllocationContext' '{' 'allocatedAssemblyContext' '(' allocatedAssemblyContext+=[Assembly::AssemblyContext|EString]
		//("," allocatedAssemblyContext+=[Assembly::AssemblyContext|EString])* ')' ('targetContainer' '{'
		//targetContainer+=Container ("," targetContainer+=Container)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'AllocationContext'
		public Keyword getAllocationContextKeyword_0() { return cAllocationContextKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'allocatedAssemblyContext'
		public Keyword getAllocatedAssemblyContextKeyword_2() { return cAllocatedAssemblyContextKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//allocatedAssemblyContext+=[Assembly::AssemblyContext|EString]
		public Assignment getAllocatedAssemblyContextAssignment_4() { return cAllocatedAssemblyContextAssignment_4; }
		
		//[Assembly::AssemblyContext|EString]
		public CrossReference getAllocatedAssemblyContextAssemblyContextCrossReference_4_0() { return cAllocatedAssemblyContextAssemblyContextCrossReference_4_0; }
		
		//EString
		public RuleCall getAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1() { return cAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1; }
		
		//("," allocatedAssemblyContext+=[Assembly::AssemblyContext|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//allocatedAssemblyContext+=[Assembly::AssemblyContext|EString]
		public Assignment getAllocatedAssemblyContextAssignment_5_1() { return cAllocatedAssemblyContextAssignment_5_1; }
		
		//[Assembly::AssemblyContext|EString]
		public CrossReference getAllocatedAssemblyContextAssemblyContextCrossReference_5_1_0() { return cAllocatedAssemblyContextAssemblyContextCrossReference_5_1_0; }
		
		//EString
		public RuleCall getAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_5_1_0_1() { return cAllocatedAssemblyContextAssemblyContextEStringParserRuleCall_5_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//('targetContainer' '{' targetContainer+=Container ("," targetContainer+=Container)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'targetContainer'
		public Keyword getTargetContainerKeyword_7_0() { return cTargetContainerKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//targetContainer+=Container
		public Assignment getTargetContainerAssignment_7_2() { return cTargetContainerAssignment_7_2; }
		
		//Container
		public RuleCall getTargetContainerContainerParserRuleCall_7_2_0() { return cTargetContainerContainerParserRuleCall_7_2_0; }
		
		//("," targetContainer+=Container)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//targetContainer+=Container
		public Assignment getTargetContainerAssignment_7_3_1() { return cTargetContainerAssignment_7_3_1; }
		
		//Container
		public RuleCall getTargetContainerContainerParserRuleCall_7_3_1_0() { return cTargetContainerContainerParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComponent_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompositeComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Component Repository::Component:
		//	Component_Impl | CompositeComponent;
		@Override public ParserRule getRule() { return rule; }
		
		//Component_Impl | CompositeComponent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Component_Impl
		public RuleCall getComponent_ImplParserRuleCall_0() { return cComponent_ImplParserRuleCall_0; }
		
		//CompositeComponent
		public RuleCall getCompositeComponentParserRuleCall_1() { return cCompositeComponentParserRuleCall_1; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cType_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMapParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cComplexTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cDateParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDoubleParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cString0ParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInt0ParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cCharParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cLongParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cFloatParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cBooleanParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cVoidParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//Type Repository::Type:
		//	Type_Impl | List | Map | ComplexType | Date | Double | String0 | Int0 | Char | Long | Float | Boolean | Void;
		@Override public ParserRule getRule() { return rule; }
		
		//Type_Impl | List | Map | ComplexType | Date | Double | String0 | Int0 | Char | Long | Float | Boolean | Void
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Type_Impl
		public RuleCall getType_ImplParserRuleCall_0() { return cType_ImplParserRuleCall_0; }
		
		//List
		public RuleCall getListParserRuleCall_1() { return cListParserRuleCall_1; }
		
		//Map
		public RuleCall getMapParserRuleCall_2() { return cMapParserRuleCall_2; }
		
		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_3() { return cComplexTypeParserRuleCall_3; }
		
		//Date
		public RuleCall getDateParserRuleCall_4() { return cDateParserRuleCall_4; }
		
		//Double
		public RuleCall getDoubleParserRuleCall_5() { return cDoubleParserRuleCall_5; }
		
		//String0
		public RuleCall getString0ParserRuleCall_6() { return cString0ParserRuleCall_6; }
		
		//Int0
		public RuleCall getInt0ParserRuleCall_7() { return cInt0ParserRuleCall_7; }
		
		//Char
		public RuleCall getCharParserRuleCall_8() { return cCharParserRuleCall_8; }
		
		//Long
		public RuleCall getLongParserRuleCall_9() { return cLongParserRuleCall_9; }
		
		//Float
		public RuleCall getFloatParserRuleCall_10() { return cFloatParserRuleCall_10; }
		
		//Boolean
		public RuleCall getBooleanParserRuleCall_11() { return cBooleanParserRuleCall_11; }
		
		//Void
		public RuleCall getVoidParserRuleCall_12() { return cVoidParserRuleCall_12; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLinksKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLinksAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cLinksLinkCrossReference_5_0 = (CrossReference)cLinksAssignment_5.eContents().get(0);
		private final RuleCall cLinksLinkEStringParserRuleCall_5_0_1 = (RuleCall)cLinksLinkCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cLinksAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cLinksLinkCrossReference_6_1_0 = (CrossReference)cLinksAssignment_6_1.eContents().get(0);
		private final RuleCall cLinksLinkEStringParserRuleCall_6_1_0_1 = (RuleCall)cLinksLinkCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Container Environment::Container:
		//	'Container'
		//	name=EString
		//	'{'
		//	'links' '(' links+=[Environment::Link|EString] ("," links+=[Environment::Link|EString])* ')'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Container' name=EString '{' 'links' '(' links+=[Environment::Link|EString] ("," links+=[Environment::Link|EString])*
		//')' '}'
		public Group getGroup() { return cGroup; }
		
		//'Container'
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'links'
		public Keyword getLinksKeyword_3() { return cLinksKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//links+=[Environment::Link|EString]
		public Assignment getLinksAssignment_5() { return cLinksAssignment_5; }
		
		//[Environment::Link|EString]
		public CrossReference getLinksLinkCrossReference_5_0() { return cLinksLinkCrossReference_5_0; }
		
		//EString
		public RuleCall getLinksLinkEStringParserRuleCall_5_0_1() { return cLinksLinkEStringParserRuleCall_5_0_1; }
		
		//("," links+=[Environment::Link|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//links+=[Environment::Link|EString]
		public Assignment getLinksAssignment_6_1() { return cLinksAssignment_6_1; }
		
		//[Environment::Link|EString]
		public CrossReference getLinksLinkCrossReference_6_1_0() { return cLinksLinkCrossReference_6_1_0; }
		
		//EString
		public RuleCall getLinksLinkEStringParserRuleCall_6_1_0_1() { return cLinksLinkEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AssemblyContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.AssemblyContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssemblyContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredRoleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRequiredRoleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cRequiredRoleRoleCrossReference_3_2_0 = (CrossReference)cRequiredRoleAssignment_3_2.eContents().get(0);
		private final RuleCall cRequiredRoleRoleEStringParserRuleCall_3_2_0_1 = (RuleCall)cRequiredRoleRoleCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRequiredRoleAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cRequiredRoleRoleCrossReference_3_3_1_0 = (CrossReference)cRequiredRoleAssignment_3_3_1.eContents().get(0);
		private final RuleCall cRequiredRoleRoleEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cRequiredRoleRoleCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cAllocationContextKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAllocationContextAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAllocationContextAllocationContextCrossReference_5_0 = (CrossReference)cAllocationContextAssignment_5.eContents().get(0);
		private final RuleCall cAllocationContextAllocationContextEStringParserRuleCall_5_0_1 = (RuleCall)cAllocationContextAllocationContextCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cProvidedRoleKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cProvidedRoleAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cProvidedRoleRoleParserRuleCall_6_2_0 = (RuleCall)cProvidedRoleAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cProvidedRoleAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cProvidedRoleRoleParserRuleCall_6_3_1_0 = (RuleCall)cProvidedRoleAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cComponentKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cComponentAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cComponentComponentParserRuleCall_7_2_0 = (RuleCall)cComponentAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cComponentAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cComponentComponentParserRuleCall_7_3_1_0 = (RuleCall)cComponentAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AssemblyContext Assembly::AssemblyContext:
		//	'AssemblyContext'
		//	name=EString
		//	'{' ('requiredRole' '(' requiredRole+=[Assembly::Role|EString] ("," requiredRole+=[Assembly::Role|EString])* ')')?
		//	'allocationContext' allocationContext=[Allocation::AllocationContext|EString] ('providedRole' '{' providedRole+=Role
		//	("," providedRole+=Role)* '}')? ('component' '{' component+=Component ("," component+=Component)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'AssemblyContext' name=EString '{' ('requiredRole' '(' requiredRole+=[Assembly::Role|EString] (","
		//requiredRole+=[Assembly::Role|EString])* ')')? 'allocationContext'
		//allocationContext=[Allocation::AllocationContext|EString] ('providedRole' '{' providedRole+=Role (","
		//providedRole+=Role)* '}')? ('component' '{' component+=Component ("," component+=Component)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'AssemblyContext'
		public Keyword getAssemblyContextKeyword_0() { return cAssemblyContextKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('requiredRole' '(' requiredRole+=[Assembly::Role|EString] ("," requiredRole+=[Assembly::Role|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'requiredRole'
		public Keyword getRequiredRoleKeyword_3_0() { return cRequiredRoleKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//requiredRole+=[Assembly::Role|EString]
		public Assignment getRequiredRoleAssignment_3_2() { return cRequiredRoleAssignment_3_2; }
		
		//[Assembly::Role|EString]
		public CrossReference getRequiredRoleRoleCrossReference_3_2_0() { return cRequiredRoleRoleCrossReference_3_2_0; }
		
		//EString
		public RuleCall getRequiredRoleRoleEStringParserRuleCall_3_2_0_1() { return cRequiredRoleRoleEStringParserRuleCall_3_2_0_1; }
		
		//("," requiredRole+=[Assembly::Role|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//requiredRole+=[Assembly::Role|EString]
		public Assignment getRequiredRoleAssignment_3_3_1() { return cRequiredRoleAssignment_3_3_1; }
		
		//[Assembly::Role|EString]
		public CrossReference getRequiredRoleRoleCrossReference_3_3_1_0() { return cRequiredRoleRoleCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getRequiredRoleRoleEStringParserRuleCall_3_3_1_0_1() { return cRequiredRoleRoleEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//'allocationContext'
		public Keyword getAllocationContextKeyword_4() { return cAllocationContextKeyword_4; }
		
		//allocationContext=[Allocation::AllocationContext|EString]
		public Assignment getAllocationContextAssignment_5() { return cAllocationContextAssignment_5; }
		
		//[Allocation::AllocationContext|EString]
		public CrossReference getAllocationContextAllocationContextCrossReference_5_0() { return cAllocationContextAllocationContextCrossReference_5_0; }
		
		//EString
		public RuleCall getAllocationContextAllocationContextEStringParserRuleCall_5_0_1() { return cAllocationContextAllocationContextEStringParserRuleCall_5_0_1; }
		
		//('providedRole' '{' providedRole+=Role ("," providedRole+=Role)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'providedRole'
		public Keyword getProvidedRoleKeyword_6_0() { return cProvidedRoleKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//providedRole+=Role
		public Assignment getProvidedRoleAssignment_6_2() { return cProvidedRoleAssignment_6_2; }
		
		//Role
		public RuleCall getProvidedRoleRoleParserRuleCall_6_2_0() { return cProvidedRoleRoleParserRuleCall_6_2_0; }
		
		//("," providedRole+=Role)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//providedRole+=Role
		public Assignment getProvidedRoleAssignment_6_3_1() { return cProvidedRoleAssignment_6_3_1; }
		
		//Role
		public RuleCall getProvidedRoleRoleParserRuleCall_6_3_1_0() { return cProvidedRoleRoleParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('component' '{' component+=Component ("," component+=Component)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'component'
		public Keyword getComponentKeyword_7_0() { return cComponentKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//component+=Component
		public Assignment getComponentAssignment_7_2() { return cComponentAssignment_7_2; }
		
		//Component
		public RuleCall getComponentComponentParserRuleCall_7_2_0() { return cComponentComponentParserRuleCall_7_2_0; }
		
		//("," component+=Component)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//component+=Component
		public Assignment getComponentAssignment_7_3_1() { return cComponentAssignment_7_3_1; }
		
		//Component
		public RuleCall getComponentComponentParserRuleCall_7_3_1_0() { return cComponentComponentParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLinkedContainersKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLinkedContainersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cLinkedContainersContainerCrossReference_5_0 = (CrossReference)cLinkedContainersAssignment_5.eContents().get(0);
		private final RuleCall cLinkedContainersContainerEStringParserRuleCall_5_0_1 = (RuleCall)cLinkedContainersContainerCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cLinkedContainersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cLinkedContainersContainerCrossReference_6_1_0 = (CrossReference)cLinkedContainersAssignment_6_1.eContents().get(0);
		private final RuleCall cLinkedContainersContainerEStringParserRuleCall_6_1_0_1 = (RuleCall)cLinkedContainersContainerCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Link Environment::Link:
		//	'Link'
		//	name=EString
		//	'{'
		//	'linkedContainers' '(' linkedContainers+=[Environment::Container|EString] (","
		//	linkedContainers+=[Environment::Container|EString])* ')'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Link' name=EString '{' 'linkedContainers' '(' linkedContainers+=[Environment::Container|EString] (","
		//linkedContainers+=[Environment::Container|EString])* ')' '}'
		public Group getGroup() { return cGroup; }
		
		//'Link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'linkedContainers'
		public Keyword getLinkedContainersKeyword_3() { return cLinkedContainersKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//linkedContainers+=[Environment::Container|EString]
		public Assignment getLinkedContainersAssignment_5() { return cLinkedContainersAssignment_5; }
		
		//[Environment::Container|EString]
		public CrossReference getLinkedContainersContainerCrossReference_5_0() { return cLinkedContainersContainerCrossReference_5_0; }
		
		//EString
		public RuleCall getLinkedContainersContainerEStringParserRuleCall_5_0_1() { return cLinkedContainersContainerEStringParserRuleCall_5_0_1; }
		
		//("," linkedContainers+=[Environment::Container|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//linkedContainers+=[Environment::Container|EString]
		public Assignment getLinkedContainersAssignment_6_1() { return cLinkedContainersAssignment_6_1; }
		
		//[Environment::Container|EString]
		public CrossReference getLinkedContainersContainerCrossReference_6_1_0() { return cLinkedContainersContainerCrossReference_6_1_0; }
		
		//EString
		public RuleCall getLinkedContainersContainerEStringParserRuleCall_6_1_0_1() { return cLinkedContainersContainerEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Role Assembly::Role:
		//	{Assembly::Role}
		//	'Role';
		@Override public ParserRule getRule() { return rule; }
		
		//{Assembly::Role} 'Role'
		public Group getGroup() { return cGroup; }
		
		//{Assembly::Role}
		public Action getRoleAction_0() { return cRoleAction_0; }
		
		//'Role'
		public Keyword getRoleKeyword_1() { return cRoleKeyword_1; }
	}
	public class Component_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Component_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredInterfaceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRequiredInterfaceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cRequiredInterfaceInterfaceCrossReference_3_2_0 = (CrossReference)cRequiredInterfaceAssignment_3_2.eContents().get(0);
		private final RuleCall cRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1 = (RuleCall)cRequiredInterfaceInterfaceCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRequiredInterfaceAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cRequiredInterfaceInterfaceCrossReference_3_3_1_0 = (CrossReference)cRequiredInterfaceAssignment_3_3_1.eContents().get(0);
		private final RuleCall cRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cRequiredInterfaceInterfaceCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRequiredServiceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRequiredServiceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cRequiredServiceServiceCrossReference_6_0 = (CrossReference)cRequiredServiceAssignment_6.eContents().get(0);
		private final RuleCall cRequiredServiceServiceEStringParserRuleCall_6_0_1 = (RuleCall)cRequiredServiceServiceCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRequiredServiceAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cRequiredServiceServiceCrossReference_7_1_0 = (CrossReference)cRequiredServiceAssignment_7_1.eContents().get(0);
		private final RuleCall cRequiredServiceServiceEStringParserRuleCall_7_1_0_1 = (RuleCall)cRequiredServiceServiceCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cProvidedInterfaceKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cProvidedInterfaceAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cProvidedInterfaceInterfaceParserRuleCall_9_2_0 = (RuleCall)cProvidedInterfaceAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cProvidedInterfaceAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cProvidedInterfaceInterfaceParserRuleCall_9_3_1_0 = (RuleCall)cProvidedInterfaceAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cProvidedServiceKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cProvidedServiceAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cProvidedServiceServiceParserRuleCall_12_0 = (RuleCall)cProvidedServiceAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cProvidedServiceAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cProvidedServiceServiceParserRuleCall_13_1_0 = (RuleCall)cProvidedServiceAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cBehaviourDescriptionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cBehaviourDescriptionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0 = (RuleCall)cBehaviourDescriptionAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//Component_Impl Repository::Component:
		//	'Component'
		//	name=EString
		//	'{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//	requiredInterface+=[Repository::Interface|EString])* ')')?
		//	'requiredService' '(' requiredService+=[Repository::Service|EString] (","
		//	requiredService+=[Repository::Service|EString])* ')' ('providedInterface' '{' providedInterface+=Interface (","
		//	providedInterface+=Interface)* '}')?
		//	'providedService' '{' providedService+=Service ("," providedService+=Service)* '}'
		//	'behaviourDescription' behaviourDescription=BehaviorDescription
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Component' name=EString '{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//requiredInterface+=[Repository::Interface|EString])* ')')? 'requiredService' '('
		//requiredService+=[Repository::Service|EString] ("," requiredService+=[Repository::Service|EString])* ')'
		//('providedInterface' '{' providedInterface+=Interface ("," providedInterface+=Interface)* '}')? 'providedService' '{'
		//providedService+=Service ("," providedService+=Service)* '}' 'behaviourDescription'
		//behaviourDescription=BehaviorDescription '}'
		public Group getGroup() { return cGroup; }
		
		//'Component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//requiredInterface+=[Repository::Interface|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'requiredInterface'
		public Keyword getRequiredInterfaceKeyword_3_0() { return cRequiredInterfaceKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//requiredInterface+=[Repository::Interface|EString]
		public Assignment getRequiredInterfaceAssignment_3_2() { return cRequiredInterfaceAssignment_3_2; }
		
		//[Repository::Interface|EString]
		public CrossReference getRequiredInterfaceInterfaceCrossReference_3_2_0() { return cRequiredInterfaceInterfaceCrossReference_3_2_0; }
		
		//EString
		public RuleCall getRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1() { return cRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1; }
		
		//("," requiredInterface+=[Repository::Interface|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//requiredInterface+=[Repository::Interface|EString]
		public Assignment getRequiredInterfaceAssignment_3_3_1() { return cRequiredInterfaceAssignment_3_3_1; }
		
		//[Repository::Interface|EString]
		public CrossReference getRequiredInterfaceInterfaceCrossReference_3_3_1_0() { return cRequiredInterfaceInterfaceCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1() { return cRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//'requiredService'
		public Keyword getRequiredServiceKeyword_4() { return cRequiredServiceKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//requiredService+=[Repository::Service|EString]
		public Assignment getRequiredServiceAssignment_6() { return cRequiredServiceAssignment_6; }
		
		//[Repository::Service|EString]
		public CrossReference getRequiredServiceServiceCrossReference_6_0() { return cRequiredServiceServiceCrossReference_6_0; }
		
		//EString
		public RuleCall getRequiredServiceServiceEStringParserRuleCall_6_0_1() { return cRequiredServiceServiceEStringParserRuleCall_6_0_1; }
		
		//("," requiredService+=[Repository::Service|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//requiredService+=[Repository::Service|EString]
		public Assignment getRequiredServiceAssignment_7_1() { return cRequiredServiceAssignment_7_1; }
		
		//[Repository::Service|EString]
		public CrossReference getRequiredServiceServiceCrossReference_7_1_0() { return cRequiredServiceServiceCrossReference_7_1_0; }
		
		//EString
		public RuleCall getRequiredServiceServiceEStringParserRuleCall_7_1_0_1() { return cRequiredServiceServiceEStringParserRuleCall_7_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//('providedInterface' '{' providedInterface+=Interface ("," providedInterface+=Interface)* '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'providedInterface'
		public Keyword getProvidedInterfaceKeyword_9_0() { return cProvidedInterfaceKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//providedInterface+=Interface
		public Assignment getProvidedInterfaceAssignment_9_2() { return cProvidedInterfaceAssignment_9_2; }
		
		//Interface
		public RuleCall getProvidedInterfaceInterfaceParserRuleCall_9_2_0() { return cProvidedInterfaceInterfaceParserRuleCall_9_2_0; }
		
		//("," providedInterface+=Interface)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//providedInterface+=Interface
		public Assignment getProvidedInterfaceAssignment_9_3_1() { return cProvidedInterfaceAssignment_9_3_1; }
		
		//Interface
		public RuleCall getProvidedInterfaceInterfaceParserRuleCall_9_3_1_0() { return cProvidedInterfaceInterfaceParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//'providedService'
		public Keyword getProvidedServiceKeyword_10() { return cProvidedServiceKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//providedService+=Service
		public Assignment getProvidedServiceAssignment_12() { return cProvidedServiceAssignment_12; }
		
		//Service
		public RuleCall getProvidedServiceServiceParserRuleCall_12_0() { return cProvidedServiceServiceParserRuleCall_12_0; }
		
		//("," providedService+=Service)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//providedService+=Service
		public Assignment getProvidedServiceAssignment_13_1() { return cProvidedServiceAssignment_13_1; }
		
		//Service
		public RuleCall getProvidedServiceServiceParserRuleCall_13_1_0() { return cProvidedServiceServiceParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'behaviourDescription'
		public Keyword getBehaviourDescriptionKeyword_15() { return cBehaviourDescriptionKeyword_15; }
		
		//behaviourDescription=BehaviorDescription
		public Assignment getBehaviourDescriptionAssignment_16() { return cBehaviourDescriptionAssignment_16; }
		
		//BehaviorDescription
		public RuleCall getBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0() { return cBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterfaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSignatureKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSignatureAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSignatureSignatureParserRuleCall_5_0 = (RuleCall)cSignatureAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSignatureAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSignatureSignatureParserRuleCall_6_1_0 = (RuleCall)cSignatureAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Interface Repository::Interface:
		//	'Interface'
		//	name=EString
		//	'{'
		//	'signature' '{' signature+=Signature ("," signature+=Signature)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Interface' name=EString '{' 'signature' '{' signature+=Signature ("," signature+=Signature)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Interface'
		public Keyword getInterfaceKeyword_0() { return cInterfaceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'signature'
		public Keyword getSignatureKeyword_3() { return cSignatureKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//signature+=Signature
		public Assignment getSignatureAssignment_5() { return cSignatureAssignment_5; }
		
		//Signature
		public RuleCall getSignatureSignatureParserRuleCall_5_0() { return cSignatureSignatureParserRuleCall_5_0; }
		
		//("," signature+=Signature)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//signature+=Signature
		public Assignment getSignatureAssignment_6_1() { return cSignatureAssignment_6_1; }
		
		//Signature
		public RuleCall getSignatureSignatureParserRuleCall_6_1_0() { return cSignatureSignatureParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCorrespondingSignatureKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCorrespondingSignatureAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCorrespondingSignatureSignatureParserRuleCall_5_0 = (RuleCall)cCorrespondingSignatureAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCorrespondingSignatureAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCorrespondingSignatureSignatureParserRuleCall_6_1_0 = (RuleCall)cCorrespondingSignatureAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Service Repository::Service:
		//	'Service'
		//	name=EString
		//	'{'
		//	'correspondingSignature' '{' correspondingSignature+=Signature ("," correspondingSignature+=Signature)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Service' name=EString '{' 'correspondingSignature' '{' correspondingSignature+=Signature (","
		//correspondingSignature+=Signature)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Service'
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'correspondingSignature'
		public Keyword getCorrespondingSignatureKeyword_3() { return cCorrespondingSignatureKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//correspondingSignature+=Signature
		public Assignment getCorrespondingSignatureAssignment_5() { return cCorrespondingSignatureAssignment_5; }
		
		//Signature
		public RuleCall getCorrespondingSignatureSignatureParserRuleCall_5_0() { return cCorrespondingSignatureSignatureParserRuleCall_5_0; }
		
		//("," correspondingSignature+=Signature)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//correspondingSignature+=Signature
		public Assignment getCorrespondingSignatureAssignment_6_1() { return cCorrespondingSignatureAssignment_6_1; }
		
		//Signature
		public RuleCall getCorrespondingSignatureSignatureParserRuleCall_6_1_0() { return cCorrespondingSignatureSignatureParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class BehaviorDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.BehaviorDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBehaviorDescriptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBehaviorDescriptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCalledServicesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cCalledServicesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cCalledServicesServiceCrossReference_3_2_0 = (CrossReference)cCalledServicesAssignment_3_2.eContents().get(0);
		private final RuleCall cCalledServicesServiceEStringParserRuleCall_3_2_0_1 = (RuleCall)cCalledServicesServiceCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCalledServicesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cCalledServicesServiceCrossReference_3_3_1_0 = (CrossReference)cCalledServicesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cCalledServicesServiceEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cCalledServicesServiceCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInternalActionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInternalActionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInternalActionsInternalActionParserRuleCall_4_1_0 = (RuleCall)cInternalActionsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLoopsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLoopsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLoopsLoopParserRuleCall_5_1_0 = (RuleCall)cLoopsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBranchesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBranchesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBranchesBranchParserRuleCall_6_1_0 = (RuleCall)cBranchesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//BehaviorDescription Repository::BehaviorDescription:
		//	{Repository::BehaviorDescription}
		//	'BehaviorDescription'
		//	'{' ('calledServices' '(' calledServices+=[Repository::Service|EString] (","
		//	calledServices+=[Repository::Service|EString])* ')')? ('internalActions' internalActions=InternalAction)? ('loops'
		//	loops=Loop)? ('branches' branches=Branch)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::BehaviorDescription} 'BehaviorDescription' '{' ('calledServices' '('
		//calledServices+=[Repository::Service|EString] ("," calledServices+=[Repository::Service|EString])* ')')?
		//('internalActions' internalActions=InternalAction)? ('loops' loops=Loop)? ('branches' branches=Branch)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Repository::BehaviorDescription}
		public Action getBehaviorDescriptionAction_0() { return cBehaviorDescriptionAction_0; }
		
		//'BehaviorDescription'
		public Keyword getBehaviorDescriptionKeyword_1() { return cBehaviorDescriptionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('calledServices' '(' calledServices+=[Repository::Service|EString] ("," calledServices+=[Repository::Service|EString])*
		//')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'calledServices'
		public Keyword getCalledServicesKeyword_3_0() { return cCalledServicesKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//calledServices+=[Repository::Service|EString]
		public Assignment getCalledServicesAssignment_3_2() { return cCalledServicesAssignment_3_2; }
		
		//[Repository::Service|EString]
		public CrossReference getCalledServicesServiceCrossReference_3_2_0() { return cCalledServicesServiceCrossReference_3_2_0; }
		
		//EString
		public RuleCall getCalledServicesServiceEStringParserRuleCall_3_2_0_1() { return cCalledServicesServiceEStringParserRuleCall_3_2_0_1; }
		
		//("," calledServices+=[Repository::Service|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//calledServices+=[Repository::Service|EString]
		public Assignment getCalledServicesAssignment_3_3_1() { return cCalledServicesAssignment_3_3_1; }
		
		//[Repository::Service|EString]
		public CrossReference getCalledServicesServiceCrossReference_3_3_1_0() { return cCalledServicesServiceCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getCalledServicesServiceEStringParserRuleCall_3_3_1_0_1() { return cCalledServicesServiceEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('internalActions' internalActions=InternalAction)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'internalActions'
		public Keyword getInternalActionsKeyword_4_0() { return cInternalActionsKeyword_4_0; }
		
		//internalActions=InternalAction
		public Assignment getInternalActionsAssignment_4_1() { return cInternalActionsAssignment_4_1; }
		
		//InternalAction
		public RuleCall getInternalActionsInternalActionParserRuleCall_4_1_0() { return cInternalActionsInternalActionParserRuleCall_4_1_0; }
		
		//('loops' loops=Loop)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'loops'
		public Keyword getLoopsKeyword_5_0() { return cLoopsKeyword_5_0; }
		
		//loops=Loop
		public Assignment getLoopsAssignment_5_1() { return cLoopsAssignment_5_1; }
		
		//Loop
		public RuleCall getLoopsLoopParserRuleCall_5_1_0() { return cLoopsLoopParserRuleCall_5_1_0; }
		
		//('branches' branches=Branch)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'branches'
		public Keyword getBranchesKeyword_6_0() { return cBranchesKeyword_6_0; }
		
		//branches=Branch
		public Assignment getBranchesAssignment_6_1() { return cBranchesAssignment_6_1; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_6_1_0() { return cBranchesBranchParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class CompositeComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.CompositeComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRequiredInterfaceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRequiredInterfaceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cRequiredInterfaceInterfaceCrossReference_3_2_0 = (CrossReference)cRequiredInterfaceAssignment_3_2.eContents().get(0);
		private final RuleCall cRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1 = (RuleCall)cRequiredInterfaceInterfaceCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRequiredInterfaceAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cRequiredInterfaceInterfaceCrossReference_3_3_1_0 = (CrossReference)cRequiredInterfaceAssignment_3_3_1.eContents().get(0);
		private final RuleCall cRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cRequiredInterfaceInterfaceCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRequiredServiceKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRequiredServiceAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cRequiredServiceServiceCrossReference_6_0 = (CrossReference)cRequiredServiceAssignment_6.eContents().get(0);
		private final RuleCall cRequiredServiceServiceEStringParserRuleCall_6_0_1 = (RuleCall)cRequiredServiceServiceCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cRequiredServiceAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cRequiredServiceServiceCrossReference_7_1_0 = (CrossReference)cRequiredServiceAssignment_7_1.eContents().get(0);
		private final RuleCall cRequiredServiceServiceEStringParserRuleCall_7_1_0_1 = (RuleCall)cRequiredServiceServiceCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cProvidedInterfaceKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cProvidedInterfaceAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cProvidedInterfaceInterfaceParserRuleCall_9_2_0 = (RuleCall)cProvidedInterfaceAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cProvidedInterfaceAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final RuleCall cProvidedInterfaceInterfaceParserRuleCall_9_3_1_0 = (RuleCall)cProvidedInterfaceAssignment_9_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Keyword cProvidedServiceKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cProvidedServiceAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cProvidedServiceServiceParserRuleCall_12_0 = (RuleCall)cProvidedServiceAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cProvidedServiceAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cProvidedServiceServiceParserRuleCall_13_1_0 = (RuleCall)cProvidedServiceAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cBehaviourDescriptionKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cBehaviourDescriptionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0 = (RuleCall)cBehaviourDescriptionAssignment_16.eContents().get(0);
		private final Keyword cEncapsulatedAssemblyContextKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cEncapsulatedAssemblyContextAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cEncapsulatedAssemblyContextAssemblyContextParserRuleCall_18_0 = (RuleCall)cEncapsulatedAssemblyContextAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//CompositeComponent Repository::CompositeComponent:
		//	'CompositeComponent'
		//	name=EString
		//	'{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//	requiredInterface+=[Repository::Interface|EString])* ')')?
		//	'requiredService' '(' requiredService+=[Repository::Service|EString] (","
		//	requiredService+=[Repository::Service|EString])* ')' ('providedInterface' '{' providedInterface+=Interface (","
		//	providedInterface+=Interface)* '}')?
		//	'providedService' '{' providedService+=Service ("," providedService+=Service)* '}'
		//	'behaviourDescription' behaviourDescription=BehaviorDescription
		//	'encapsulatedAssemblyContext' encapsulatedAssemblyContext=AssemblyContext
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CompositeComponent' name=EString '{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//requiredInterface+=[Repository::Interface|EString])* ')')? 'requiredService' '('
		//requiredService+=[Repository::Service|EString] ("," requiredService+=[Repository::Service|EString])* ')'
		//('providedInterface' '{' providedInterface+=Interface ("," providedInterface+=Interface)* '}')? 'providedService' '{'
		//providedService+=Service ("," providedService+=Service)* '}' 'behaviourDescription'
		//behaviourDescription=BehaviorDescription 'encapsulatedAssemblyContext' encapsulatedAssemblyContext=AssemblyContext '}'
		public Group getGroup() { return cGroup; }
		
		//'CompositeComponent'
		public Keyword getCompositeComponentKeyword_0() { return cCompositeComponentKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
		//requiredInterface+=[Repository::Interface|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'requiredInterface'
		public Keyword getRequiredInterfaceKeyword_3_0() { return cRequiredInterfaceKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//requiredInterface+=[Repository::Interface|EString]
		public Assignment getRequiredInterfaceAssignment_3_2() { return cRequiredInterfaceAssignment_3_2; }
		
		//[Repository::Interface|EString]
		public CrossReference getRequiredInterfaceInterfaceCrossReference_3_2_0() { return cRequiredInterfaceInterfaceCrossReference_3_2_0; }
		
		//EString
		public RuleCall getRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1() { return cRequiredInterfaceInterfaceEStringParserRuleCall_3_2_0_1; }
		
		//("," requiredInterface+=[Repository::Interface|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//requiredInterface+=[Repository::Interface|EString]
		public Assignment getRequiredInterfaceAssignment_3_3_1() { return cRequiredInterfaceAssignment_3_3_1; }
		
		//[Repository::Interface|EString]
		public CrossReference getRequiredInterfaceInterfaceCrossReference_3_3_1_0() { return cRequiredInterfaceInterfaceCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1() { return cRequiredInterfaceInterfaceEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//'requiredService'
		public Keyword getRequiredServiceKeyword_4() { return cRequiredServiceKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//requiredService+=[Repository::Service|EString]
		public Assignment getRequiredServiceAssignment_6() { return cRequiredServiceAssignment_6; }
		
		//[Repository::Service|EString]
		public CrossReference getRequiredServiceServiceCrossReference_6_0() { return cRequiredServiceServiceCrossReference_6_0; }
		
		//EString
		public RuleCall getRequiredServiceServiceEStringParserRuleCall_6_0_1() { return cRequiredServiceServiceEStringParserRuleCall_6_0_1; }
		
		//("," requiredService+=[Repository::Service|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//requiredService+=[Repository::Service|EString]
		public Assignment getRequiredServiceAssignment_7_1() { return cRequiredServiceAssignment_7_1; }
		
		//[Repository::Service|EString]
		public CrossReference getRequiredServiceServiceCrossReference_7_1_0() { return cRequiredServiceServiceCrossReference_7_1_0; }
		
		//EString
		public RuleCall getRequiredServiceServiceEStringParserRuleCall_7_1_0_1() { return cRequiredServiceServiceEStringParserRuleCall_7_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//('providedInterface' '{' providedInterface+=Interface ("," providedInterface+=Interface)* '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'providedInterface'
		public Keyword getProvidedInterfaceKeyword_9_0() { return cProvidedInterfaceKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//providedInterface+=Interface
		public Assignment getProvidedInterfaceAssignment_9_2() { return cProvidedInterfaceAssignment_9_2; }
		
		//Interface
		public RuleCall getProvidedInterfaceInterfaceParserRuleCall_9_2_0() { return cProvidedInterfaceInterfaceParserRuleCall_9_2_0; }
		
		//("," providedInterface+=Interface)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//providedInterface+=Interface
		public Assignment getProvidedInterfaceAssignment_9_3_1() { return cProvidedInterfaceAssignment_9_3_1; }
		
		//Interface
		public RuleCall getProvidedInterfaceInterfaceParserRuleCall_9_3_1_0() { return cProvidedInterfaceInterfaceParserRuleCall_9_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_4() { return cRightCurlyBracketKeyword_9_4; }
		
		//'providedService'
		public Keyword getProvidedServiceKeyword_10() { return cProvidedServiceKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//providedService+=Service
		public Assignment getProvidedServiceAssignment_12() { return cProvidedServiceAssignment_12; }
		
		//Service
		public RuleCall getProvidedServiceServiceParserRuleCall_12_0() { return cProvidedServiceServiceParserRuleCall_12_0; }
		
		//("," providedService+=Service)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//providedService+=Service
		public Assignment getProvidedServiceAssignment_13_1() { return cProvidedServiceAssignment_13_1; }
		
		//Service
		public RuleCall getProvidedServiceServiceParserRuleCall_13_1_0() { return cProvidedServiceServiceParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'behaviourDescription'
		public Keyword getBehaviourDescriptionKeyword_15() { return cBehaviourDescriptionKeyword_15; }
		
		//behaviourDescription=BehaviorDescription
		public Assignment getBehaviourDescriptionAssignment_16() { return cBehaviourDescriptionAssignment_16; }
		
		//BehaviorDescription
		public RuleCall getBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0() { return cBehaviourDescriptionBehaviorDescriptionParserRuleCall_16_0; }
		
		//'encapsulatedAssemblyContext'
		public Keyword getEncapsulatedAssemblyContextKeyword_17() { return cEncapsulatedAssemblyContextKeyword_17; }
		
		//encapsulatedAssemblyContext=AssemblyContext
		public Assignment getEncapsulatedAssemblyContextAssignment_18() { return cEncapsulatedAssemblyContextAssignment_18; }
		
		//AssemblyContext
		public RuleCall getEncapsulatedAssemblyContextAssemblyContextParserRuleCall_18_0() { return cEncapsulatedAssemblyContextAssemblyContextParserRuleCall_18_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class SignatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Signature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSignatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReturnTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReturnTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReturnTypeTypeCrossReference_4_0 = (CrossReference)cReturnTypeAssignment_4.eContents().get(0);
		private final RuleCall cReturnTypeTypeEStringParserRuleCall_4_0_1 = (RuleCall)cReturnTypeTypeCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cParameterTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cParameterTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cParameterTypeTypeCrossReference_5_2_0 = (CrossReference)cParameterTypeAssignment_5_2.eContents().get(0);
		private final RuleCall cParameterTypeTypeEStringParserRuleCall_5_2_0_1 = (RuleCall)cParameterTypeTypeCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cParameterTypeAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cParameterTypeTypeCrossReference_5_3_1_0 = (CrossReference)cParameterTypeAssignment_5_3_1.eContents().get(0);
		private final RuleCall cParameterTypeTypeEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cParameterTypeTypeCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Signature Repository::Signature:
		//	'Signature'
		//	name=EString
		//	'{'
		//	'returnType' returnType=[Repository::Type|EString] ('parameterType' '(' parameterType+=[Repository::Type|EString] (","
		//	parameterType+=[Repository::Type|EString])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Signature' name=EString '{' 'returnType' returnType=[Repository::Type|EString] ('parameterType' '('
		//parameterType+=[Repository::Type|EString] ("," parameterType+=[Repository::Type|EString])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		//'Signature'
		public Keyword getSignatureKeyword_0() { return cSignatureKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'returnType'
		public Keyword getReturnTypeKeyword_3() { return cReturnTypeKeyword_3; }
		
		//returnType=[Repository::Type|EString]
		public Assignment getReturnTypeAssignment_4() { return cReturnTypeAssignment_4; }
		
		//[Repository::Type|EString]
		public CrossReference getReturnTypeTypeCrossReference_4_0() { return cReturnTypeTypeCrossReference_4_0; }
		
		//EString
		public RuleCall getReturnTypeTypeEStringParserRuleCall_4_0_1() { return cReturnTypeTypeEStringParserRuleCall_4_0_1; }
		
		//('parameterType' '(' parameterType+=[Repository::Type|EString] ("," parameterType+=[Repository::Type|EString])* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'parameterType'
		public Keyword getParameterTypeKeyword_5_0() { return cParameterTypeKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//parameterType+=[Repository::Type|EString]
		public Assignment getParameterTypeAssignment_5_2() { return cParameterTypeAssignment_5_2; }
		
		//[Repository::Type|EString]
		public CrossReference getParameterTypeTypeCrossReference_5_2_0() { return cParameterTypeTypeCrossReference_5_2_0; }
		
		//EString
		public RuleCall getParameterTypeTypeEStringParserRuleCall_5_2_0_1() { return cParameterTypeTypeEStringParserRuleCall_5_2_0_1; }
		
		//("," parameterType+=[Repository::Type|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//parameterType+=[Repository::Type|EString]
		public Assignment getParameterTypeAssignment_5_3_1() { return cParameterTypeAssignment_5_3_1; }
		
		//[Repository::Type|EString]
		public CrossReference getParameterTypeTypeCrossReference_5_3_1_0() { return cParameterTypeTypeCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getParameterTypeTypeEStringParserRuleCall_5_3_1_0_1() { return cParameterTypeTypeEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Type_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Type_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Type_Impl Repository::Type:
		//	{Repository::Type}
		//	'Type';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Type} 'Type'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Type}
		public Action getTypeAction_0() { return cTypeAction_0; }
		
		//'Type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
	}
	public class ListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.List");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//List Repository::List:
		//	{Repository::List}
		//	'List';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::List} 'List'
		public Group getGroup() { return cGroup; }
		
		//{Repository::List}
		public Action getListAction_0() { return cListAction_0; }
		
		//'List'
		public Keyword getListKeyword_1() { return cListKeyword_1; }
	}
	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Map");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMapAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMapKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Map Repository::Map:
		//	{Repository::Map}
		//	'Map';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Map} 'Map'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Map}
		public Action getMapAction_0() { return cMapAction_0; }
		
		//'Map'
		public Keyword getMapKeyword_1() { return cMapKeyword_1; }
	}
	public class ComplexTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.ComplexType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComplexTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComplexTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ComplexType Repository::ComplexType:
		//	{Repository::ComplexType}
		//	'ComplexType';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::ComplexType} 'ComplexType'
		public Group getGroup() { return cGroup; }
		
		//{Repository::ComplexType}
		public Action getComplexTypeAction_0() { return cComplexTypeAction_0; }
		
		//'ComplexType'
		public Keyword getComplexTypeKeyword_1() { return cComplexTypeKeyword_1; }
	}
	public class DateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Date Repository::Date:
		//	{Repository::Date}
		//	'Date';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Date} 'Date'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Date}
		public Action getDateAction_0() { return cDateAction_0; }
		
		//'Date'
		public Keyword getDateKeyword_1() { return cDateKeyword_1; }
	}
	public class DoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Double");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDoubleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDoubleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Double Repository::Double:
		//	{Repository::Double}
		//	'Double';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Double} 'Double'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Double}
		public Action getDoubleAction_0() { return cDoubleAction_0; }
		
		//'Double'
		public Keyword getDoubleKeyword_1() { return cDoubleKeyword_1; }
	}
	public class String0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.String0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//String0 Repository::String:
		//	{Repository::String}
		//	'String';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::String} 'String'
		public Group getGroup() { return cGroup; }
		
		//{Repository::String}
		public Action getStringAction_0() { return cStringAction_0; }
		
		//'String'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
	}
	public class Int0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Int0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Int0 Repository::Int:
		//	{Repository::Int}
		//	'Int';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Int} 'Int'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Int}
		public Action getIntAction_0() { return cIntAction_0; }
		
		//'Int'
		public Keyword getIntKeyword_1() { return cIntKeyword_1; }
	}
	public class CharElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Char");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCharAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCharKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Char Repository::Char:
		//	{Repository::Char}
		//	'Char';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Char} 'Char'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Char}
		public Action getCharAction_0() { return cCharAction_0; }
		
		//'Char'
		public Keyword getCharKeyword_1() { return cCharKeyword_1; }
	}
	public class LongElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Long");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLongAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLongKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Long Repository::Long:
		//	{Repository::Long}
		//	'Long';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Long} 'Long'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Long}
		public Action getLongAction_0() { return cLongAction_0; }
		
		//'Long'
		public Keyword getLongKeyword_1() { return cLongKeyword_1; }
	}
	public class FloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Float");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFloatAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFloatKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Float Repository::Float:
		//	{Repository::Float}
		//	'Float';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Float} 'Float'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Float}
		public Action getFloatAction_0() { return cFloatAction_0; }
		
		//'Float'
		public Keyword getFloatKeyword_1() { return cFloatKeyword_1; }
	}
	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Boolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBooleanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Boolean Repository::Boolean:
		//	{Repository::Boolean}
		//	'Boolean';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Boolean} 'Boolean'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Boolean}
		public Action getBooleanAction_0() { return cBooleanAction_0; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_1() { return cBooleanKeyword_1; }
	}
	public class VoidElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Void");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVoidAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVoidKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Void Repository::Void:
		//	{Repository::Void}
		//	'Void';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Void} 'Void'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Void}
		public Action getVoidAction_0() { return cVoidAction_0; }
		
		//'Void'
		public Keyword getVoidKeyword_1() { return cVoidKeyword_1; }
	}
	public class InternalActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.InternalAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternalActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InternalAction Repository::InternalAction:
		//	{Repository::InternalAction}
		//	'InternalAction';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::InternalAction} 'InternalAction'
		public Group getGroup() { return cGroup; }
		
		//{Repository::InternalAction}
		public Action getInternalActionAction_0() { return cInternalActionAction_0; }
		
		//'InternalAction'
		public Keyword getInternalActionKeyword_1() { return cInternalActionKeyword_1; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoopAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Loop Repository::Loop:
		//	{Repository::Loop}
		//	'Loop';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Loop} 'Loop'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Loop}
		public Action getLoopAction_0() { return cLoopAction_0; }
		
		//'Loop'
		public Keyword getLoopKeyword_1() { return cLoopKeyword_1; }
	}
	public class BranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "blatt2.Blatt2.Branch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBranchAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBranchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Branch Repository::Branch:
		//	{Repository::Branch}
		//	'Branch';
		@Override public ParserRule getRule() { return rule; }
		
		//{Repository::Branch} 'Branch'
		public Group getGroup() { return cGroup; }
		
		//{Repository::Branch}
		public Action getBranchAction_0() { return cBranchAction_0; }
		
		//'Branch'
		public Keyword getBranchKeyword_1() { return cBranchKeyword_1; }
	}
	
	
	private final AllocationContextElements pAllocationContext;
	private final ComponentElements pComponent;
	private final TypeElements pType;
	private final ContainerElements pContainer;
	private final AssemblyContextElements pAssemblyContext;
	private final LinkElements pLink;
	private final EStringElements pEString;
	private final RoleElements pRole;
	private final Component_ImplElements pComponent_Impl;
	private final InterfaceElements pInterface;
	private final ServiceElements pService;
	private final BehaviorDescriptionElements pBehaviorDescription;
	private final CompositeComponentElements pCompositeComponent;
	private final SignatureElements pSignature;
	private final Type_ImplElements pType_Impl;
	private final ListElements pList;
	private final MapElements pMap;
	private final ComplexTypeElements pComplexType;
	private final DateElements pDate;
	private final DoubleElements pDouble;
	private final String0Elements pString0;
	private final Int0Elements pInt0;
	private final CharElements pChar;
	private final LongElements pLong;
	private final FloatElements pFloat;
	private final BooleanElements pBoolean;
	private final VoidElements pVoid;
	private final InternalActionElements pInternalAction;
	private final LoopElements pLoop;
	private final BranchElements pBranch;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public Blatt2GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAllocationContext = new AllocationContextElements();
		this.pComponent = new ComponentElements();
		this.pType = new TypeElements();
		this.pContainer = new ContainerElements();
		this.pAssemblyContext = new AssemblyContextElements();
		this.pLink = new LinkElements();
		this.pEString = new EStringElements();
		this.pRole = new RoleElements();
		this.pComponent_Impl = new Component_ImplElements();
		this.pInterface = new InterfaceElements();
		this.pService = new ServiceElements();
		this.pBehaviorDescription = new BehaviorDescriptionElements();
		this.pCompositeComponent = new CompositeComponentElements();
		this.pSignature = new SignatureElements();
		this.pType_Impl = new Type_ImplElements();
		this.pList = new ListElements();
		this.pMap = new MapElements();
		this.pComplexType = new ComplexTypeElements();
		this.pDate = new DateElements();
		this.pDouble = new DoubleElements();
		this.pString0 = new String0Elements();
		this.pInt0 = new Int0Elements();
		this.pChar = new CharElements();
		this.pLong = new LongElements();
		this.pFloat = new FloatElements();
		this.pBoolean = new BooleanElements();
		this.pVoid = new VoidElements();
		this.pInternalAction = new InternalActionElements();
		this.pLoop = new LoopElements();
		this.pBranch = new BranchElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("blatt2.Blatt2".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AllocationContext Allocation::AllocationContext:
	//	'AllocationContext'
	//	'{'
	//	'allocatedAssemblyContext' '(' allocatedAssemblyContext+=[Assembly::AssemblyContext|EString] (","
	//	allocatedAssemblyContext+=[Assembly::AssemblyContext|EString])* ')' ('targetContainer' '{' targetContainer+=Container
	//	("," targetContainer+=Container)* '}')?
	//	'}';
	public AllocationContextElements getAllocationContextAccess() {
		return pAllocationContext;
	}
	
	public ParserRule getAllocationContextRule() {
		return getAllocationContextAccess().getRule();
	}
	
	//Component Repository::Component:
	//	Component_Impl | CompositeComponent;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//Type Repository::Type:
	//	Type_Impl | List | Map | ComplexType | Date | Double | String0 | Int0 | Char | Long | Float | Boolean | Void;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Container Environment::Container:
	//	'Container'
	//	name=EString
	//	'{'
	//	'links' '(' links+=[Environment::Link|EString] ("," links+=[Environment::Link|EString])* ')'
	//	'}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//AssemblyContext Assembly::AssemblyContext:
	//	'AssemblyContext'
	//	name=EString
	//	'{' ('requiredRole' '(' requiredRole+=[Assembly::Role|EString] ("," requiredRole+=[Assembly::Role|EString])* ')')?
	//	'allocationContext' allocationContext=[Allocation::AllocationContext|EString] ('providedRole' '{' providedRole+=Role
	//	("," providedRole+=Role)* '}')? ('component' '{' component+=Component ("," component+=Component)* '}')?
	//	'}';
	public AssemblyContextElements getAssemblyContextAccess() {
		return pAssemblyContext;
	}
	
	public ParserRule getAssemblyContextRule() {
		return getAssemblyContextAccess().getRule();
	}
	
	//Link Environment::Link:
	//	'Link'
	//	name=EString
	//	'{'
	//	'linkedContainers' '(' linkedContainers+=[Environment::Container|EString] (","
	//	linkedContainers+=[Environment::Container|EString])* ')'
	//	'}';
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Role Assembly::Role:
	//	{Assembly::Role}
	//	'Role';
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//Component_Impl Repository::Component:
	//	'Component'
	//	name=EString
	//	'{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
	//	requiredInterface+=[Repository::Interface|EString])* ')')?
	//	'requiredService' '(' requiredService+=[Repository::Service|EString] (","
	//	requiredService+=[Repository::Service|EString])* ')' ('providedInterface' '{' providedInterface+=Interface (","
	//	providedInterface+=Interface)* '}')?
	//	'providedService' '{' providedService+=Service ("," providedService+=Service)* '}'
	//	'behaviourDescription' behaviourDescription=BehaviorDescription
	//	'}';
	public Component_ImplElements getComponent_ImplAccess() {
		return pComponent_Impl;
	}
	
	public ParserRule getComponent_ImplRule() {
		return getComponent_ImplAccess().getRule();
	}
	
	//Interface Repository::Interface:
	//	'Interface'
	//	name=EString
	//	'{'
	//	'signature' '{' signature+=Signature ("," signature+=Signature)* '}'
	//	'}';
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//Service Repository::Service:
	//	'Service'
	//	name=EString
	//	'{'
	//	'correspondingSignature' '{' correspondingSignature+=Signature ("," correspondingSignature+=Signature)* '}'
	//	'}';
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}
	
	//BehaviorDescription Repository::BehaviorDescription:
	//	{Repository::BehaviorDescription}
	//	'BehaviorDescription'
	//	'{' ('calledServices' '(' calledServices+=[Repository::Service|EString] (","
	//	calledServices+=[Repository::Service|EString])* ')')? ('internalActions' internalActions=InternalAction)? ('loops'
	//	loops=Loop)? ('branches' branches=Branch)?
	//	'}';
	public BehaviorDescriptionElements getBehaviorDescriptionAccess() {
		return pBehaviorDescription;
	}
	
	public ParserRule getBehaviorDescriptionRule() {
		return getBehaviorDescriptionAccess().getRule();
	}
	
	//CompositeComponent Repository::CompositeComponent:
	//	'CompositeComponent'
	//	name=EString
	//	'{' ('requiredInterface' '(' requiredInterface+=[Repository::Interface|EString] (","
	//	requiredInterface+=[Repository::Interface|EString])* ')')?
	//	'requiredService' '(' requiredService+=[Repository::Service|EString] (","
	//	requiredService+=[Repository::Service|EString])* ')' ('providedInterface' '{' providedInterface+=Interface (","
	//	providedInterface+=Interface)* '}')?
	//	'providedService' '{' providedService+=Service ("," providedService+=Service)* '}'
	//	'behaviourDescription' behaviourDescription=BehaviorDescription
	//	'encapsulatedAssemblyContext' encapsulatedAssemblyContext=AssemblyContext
	//	'}';
	public CompositeComponentElements getCompositeComponentAccess() {
		return pCompositeComponent;
	}
	
	public ParserRule getCompositeComponentRule() {
		return getCompositeComponentAccess().getRule();
	}
	
	//Signature Repository::Signature:
	//	'Signature'
	//	name=EString
	//	'{'
	//	'returnType' returnType=[Repository::Type|EString] ('parameterType' '(' parameterType+=[Repository::Type|EString] (","
	//	parameterType+=[Repository::Type|EString])* ')')?
	//	'}';
	public SignatureElements getSignatureAccess() {
		return pSignature;
	}
	
	public ParserRule getSignatureRule() {
		return getSignatureAccess().getRule();
	}
	
	//Type_Impl Repository::Type:
	//	{Repository::Type}
	//	'Type';
	public Type_ImplElements getType_ImplAccess() {
		return pType_Impl;
	}
	
	public ParserRule getType_ImplRule() {
		return getType_ImplAccess().getRule();
	}
	
	//List Repository::List:
	//	{Repository::List}
	//	'List';
	public ListElements getListAccess() {
		return pList;
	}
	
	public ParserRule getListRule() {
		return getListAccess().getRule();
	}
	
	//Map Repository::Map:
	//	{Repository::Map}
	//	'Map';
	public MapElements getMapAccess() {
		return pMap;
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}
	
	//ComplexType Repository::ComplexType:
	//	{Repository::ComplexType}
	//	'ComplexType';
	public ComplexTypeElements getComplexTypeAccess() {
		return pComplexType;
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//Date Repository::Date:
	//	{Repository::Date}
	//	'Date';
	public DateElements getDateAccess() {
		return pDate;
	}
	
	public ParserRule getDateRule() {
		return getDateAccess().getRule();
	}
	
	//Double Repository::Double:
	//	{Repository::Double}
	//	'Double';
	public DoubleElements getDoubleAccess() {
		return pDouble;
	}
	
	public ParserRule getDoubleRule() {
		return getDoubleAccess().getRule();
	}
	
	//String0 Repository::String:
	//	{Repository::String}
	//	'String';
	public String0Elements getString0Access() {
		return pString0;
	}
	
	public ParserRule getString0Rule() {
		return getString0Access().getRule();
	}
	
	//Int0 Repository::Int:
	//	{Repository::Int}
	//	'Int';
	public Int0Elements getInt0Access() {
		return pInt0;
	}
	
	public ParserRule getInt0Rule() {
		return getInt0Access().getRule();
	}
	
	//Char Repository::Char:
	//	{Repository::Char}
	//	'Char';
	public CharElements getCharAccess() {
		return pChar;
	}
	
	public ParserRule getCharRule() {
		return getCharAccess().getRule();
	}
	
	//Long Repository::Long:
	//	{Repository::Long}
	//	'Long';
	public LongElements getLongAccess() {
		return pLong;
	}
	
	public ParserRule getLongRule() {
		return getLongAccess().getRule();
	}
	
	//Float Repository::Float:
	//	{Repository::Float}
	//	'Float';
	public FloatElements getFloatAccess() {
		return pFloat;
	}
	
	public ParserRule getFloatRule() {
		return getFloatAccess().getRule();
	}
	
	//Boolean Repository::Boolean:
	//	{Repository::Boolean}
	//	'Boolean';
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}
	
	//Void Repository::Void:
	//	{Repository::Void}
	//	'Void';
	public VoidElements getVoidAccess() {
		return pVoid;
	}
	
	public ParserRule getVoidRule() {
		return getVoidAccess().getRule();
	}
	
	//InternalAction Repository::InternalAction:
	//	{Repository::InternalAction}
	//	'InternalAction';
	public InternalActionElements getInternalActionAccess() {
		return pInternalAction;
	}
	
	public ParserRule getInternalActionRule() {
		return getInternalActionAccess().getRule();
	}
	
	//Loop Repository::Loop:
	//	{Repository::Loop}
	//	'Loop';
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//Branch Repository::Branch:
	//	{Repository::Branch}
	//	'Branch';
	public BranchElements getBranchAccess() {
		return pBranch;
	}
	
	public ParserRule getBranchRule() {
		return getBranchAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
