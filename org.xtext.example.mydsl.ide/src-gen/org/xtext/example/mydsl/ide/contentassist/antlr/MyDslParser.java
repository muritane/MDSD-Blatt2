/*
 * generated by Xtext 2.18.0.M3
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
			builder.put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getAbstractElementAccess().getGroup_0(), "rule__AbstractElement__Group_0__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup(), "rule__AllocationContext__Group__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_6(), "rule__AllocationContext__Group_6__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_8(), "rule__AllocationContext__Group_8__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_8_3(), "rule__AllocationContext__Group_8_3__0");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getGroup(), "rule__SystemEnvironment__Group__0");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getGroup_6(), "rule__SystemEnvironment__Group_6__0");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getGroup_8(), "rule__SystemEnvironment__Group_8__0");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getGroup_8_3(), "rule__SystemEnvironment__Group_8_3__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_6(), "rule__Container__Group_6__0");
			builder.put(grammarAccess.getSystemAccess().getGroup(), "rule__System__Group__0");
			builder.put(grammarAccess.getSystemAccess().getGroup_6(), "rule__System__Group_6__0");
			builder.put(grammarAccess.getSystemAccess().getGroup_8(), "rule__System__Group_8__0");
			builder.put(grammarAccess.getSystemAccess().getGroup_9(), "rule__System__Group_9__0");
			builder.put(grammarAccess.getSystemAccess().getGroup_9_3(), "rule__System__Group_9_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup(), "rule__AssemblyContext__Group__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_3(), "rule__AssemblyContext__Group_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_3_3(), "rule__AssemblyContext__Group_3_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_4(), "rule__AssemblyContext__Group_4__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_5(), "rule__AssemblyContext__Group_5__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_5_3(), "rule__AssemblyContext__Group_5_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_6(), "rule__AssemblyContext__Group_6__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_6_3(), "rule__AssemblyContext__Group_6_3__0");
			builder.put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_6(), "rule__Link__Group_6__0");
			builder.put(grammarAccess.getRoleAccess().getGroup(), "rule__Role__Group__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup(), "rule__Component_Impl__Group__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_3(), "rule__Component_Impl__Group_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_3_3(), "rule__Component_Impl__Group_3_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_4(), "rule__Component_Impl__Group_4__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_4_3(), "rule__Component_Impl__Group_4_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_5(), "rule__Component_Impl__Group_5__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_5_3(), "rule__Component_Impl__Group_5_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_6(), "rule__Component_Impl__Group_6__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_6_3(), "rule__Component_Impl__Group_6_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_7(), "rule__Component_Impl__Group_7__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup(), "rule__BehaviorDescription__Group__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_3(), "rule__BehaviorDescription__Group_3__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_3_3(), "rule__BehaviorDescription__Group_3_3__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_4(), "rule__BehaviorDescription__Group_4__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_5(), "rule__BehaviorDescription__Group_5__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_6(), "rule__BehaviorDescription__Group_6__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup(), "rule__CompositeComponent__Group__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_3(), "rule__CompositeComponent__Group_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_3_3(), "rule__CompositeComponent__Group_3_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_4(), "rule__CompositeComponent__Group_4__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_4_3(), "rule__CompositeComponent__Group_4_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_5(), "rule__CompositeComponent__Group_5__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_5_3(), "rule__CompositeComponent__Group_5_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_6(), "rule__CompositeComponent__Group_6__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_6_3(), "rule__CompositeComponent__Group_6_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_7(), "rule__CompositeComponent__Group_7__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_8(), "rule__CompositeComponent__Group_8__0");
			builder.put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
			builder.put(grammarAccess.getServiceAccess().getGroup_6(), "rule__Service__Group_6__0");
			builder.put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
			builder.put(grammarAccess.getInterfaceAccess().getGroup_6(), "rule__Interface__Group_6__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_3(), "rule__Signature__Group_3__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_4(), "rule__Signature__Group_4__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_4_3(), "rule__Signature__Group_4_3__0");
			builder.put(grammarAccess.getDelegationConnectorAccess().getGroup(), "rule__DelegationConnector__Group__0");
			builder.put(grammarAccess.getInternalActionAccess().getGroup(), "rule__InternalAction__Group__0");
			builder.put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
			builder.put(grammarAccess.getBranchAccess().getGroup(), "rule__Branch__Group__0");
			builder.put(grammarAccess.getType_ImplAccess().getGroup(), "rule__Type_Impl__Group__0");
			builder.put(grammarAccess.getListAccess().getGroup(), "rule__List__Group__0");
			builder.put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup(), "rule__ComplexType__Group__0");
			builder.put(grammarAccess.getDateAccess().getGroup(), "rule__Date__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getString0Access().getGroup(), "rule__String0__Group__0");
			builder.put(grammarAccess.getInt0Access().getGroup(), "rule__Int0__Group__0");
			builder.put(grammarAccess.getCharAccess().getGroup(), "rule__Char__Group__0");
			builder.put(grammarAccess.getLongAccess().getGroup(), "rule__Long__Group__0");
			builder.put(grammarAccess.getFloatAccess().getGroup(), "rule__Float__Group__0");
			builder.put(grammarAccess.getBooleanAccess().getGroup(), "rule__Boolean__Group__0");
			builder.put(grammarAccess.getVoidAccess().getGroup(), "rule__Void__Group__0");
			builder.put(grammarAccess.getModelAccess().getGreetingsAssignment(), "rule__Model__GreetingsAssignment");
			builder.put(grammarAccess.getAbstractElementAccess().getNameAssignment_0_1(), "rule__AbstractElement__NameAssignment_0_1");
			builder.put(grammarAccess.getAllocationContextAccess().getNameAssignment_1(), "rule__AllocationContext__NameAssignment_1");
			builder.put(grammarAccess.getAllocationContextAccess().getAllocatedAssemblyContextAssignment_5(), "rule__AllocationContext__AllocatedAssemblyContextAssignment_5");
			builder.put(grammarAccess.getAllocationContextAccess().getAllocatedAssemblyContextAssignment_6_1(), "rule__AllocationContext__AllocatedAssemblyContextAssignment_6_1");
			builder.put(grammarAccess.getAllocationContextAccess().getTargetContainerAssignment_8_2(), "rule__AllocationContext__TargetContainerAssignment_8_2");
			builder.put(grammarAccess.getAllocationContextAccess().getTargetContainerAssignment_8_3_1(), "rule__AllocationContext__TargetContainerAssignment_8_3_1");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getNameAssignment_1(), "rule__SystemEnvironment__NameAssignment_1");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getContainerAssignment_5(), "rule__SystemEnvironment__ContainerAssignment_5");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getContainerAssignment_6_1(), "rule__SystemEnvironment__ContainerAssignment_6_1");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getLinkAssignment_8_2(), "rule__SystemEnvironment__LinkAssignment_8_2");
			builder.put(grammarAccess.getSystemEnvironmentAccess().getLinkAssignment_8_3_1(), "rule__SystemEnvironment__LinkAssignment_8_3_1");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_1(), "rule__Container__NameAssignment_1");
			builder.put(grammarAccess.getContainerAccess().getLinksAssignment_5(), "rule__Container__LinksAssignment_5");
			builder.put(grammarAccess.getContainerAccess().getLinksAssignment_6_1(), "rule__Container__LinksAssignment_6_1");
			builder.put(grammarAccess.getSystemAccess().getNameAssignment_1(), "rule__System__NameAssignment_1");
			builder.put(grammarAccess.getSystemAccess().getEncapsulatedAssemblyContextAssignment_5(), "rule__System__EncapsulatedAssemblyContextAssignment_5");
			builder.put(grammarAccess.getSystemAccess().getEncapsulatedAssemblyContextAssignment_6_1(), "rule__System__EncapsulatedAssemblyContextAssignment_6_1");
			builder.put(grammarAccess.getSystemAccess().getAllocationContextAssignment_8_1(), "rule__System__AllocationContextAssignment_8_1");
			builder.put(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_9_2(), "rule__System__ProvidedInterfacesAssignment_9_2");
			builder.put(grammarAccess.getSystemAccess().getProvidedInterfacesAssignment_9_3_1(), "rule__System__ProvidedInterfacesAssignment_9_3_1");
			builder.put(grammarAccess.getSystemAccess().getEnvironmentAssignment_11(), "rule__System__EnvironmentAssignment_11");
			builder.put(grammarAccess.getAssemblyContextAccess().getNameAssignment_1(), "rule__AssemblyContext__NameAssignment_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getRequiredRoleAssignment_3_2(), "rule__AssemblyContext__RequiredRoleAssignment_3_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getRequiredRoleAssignment_3_3_1(), "rule__AssemblyContext__RequiredRoleAssignment_3_3_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getAllocationContextAssignment_4_1(), "rule__AssemblyContext__AllocationContextAssignment_4_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getProvidedRoleAssignment_5_2(), "rule__AssemblyContext__ProvidedRoleAssignment_5_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getProvidedRoleAssignment_5_3_1(), "rule__AssemblyContext__ProvidedRoleAssignment_5_3_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getComponentAssignment_6_2(), "rule__AssemblyContext__ComponentAssignment_6_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getComponentAssignment_6_3_1(), "rule__AssemblyContext__ComponentAssignment_6_3_1");
			builder.put(grammarAccess.getLinkAccess().getNameAssignment_1(), "rule__Link__NameAssignment_1");
			builder.put(grammarAccess.getLinkAccess().getLinkedContainersAssignment_5(), "rule__Link__LinkedContainersAssignment_5");
			builder.put(grammarAccess.getLinkAccess().getLinkedContainersAssignment_6_1(), "rule__Link__LinkedContainersAssignment_6_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getNameAssignment_1(), "rule__Component_Impl__NameAssignment_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredInterfaceAssignment_3_2(), "rule__Component_Impl__RequiredInterfaceAssignment_3_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredInterfaceAssignment_3_3_1(), "rule__Component_Impl__RequiredInterfaceAssignment_3_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredServiceAssignment_4_2(), "rule__Component_Impl__RequiredServiceAssignment_4_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredServiceAssignment_4_3_1(), "rule__Component_Impl__RequiredServiceAssignment_4_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedInterfaceAssignment_5_2(), "rule__Component_Impl__ProvidedInterfaceAssignment_5_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedInterfaceAssignment_5_3_1(), "rule__Component_Impl__ProvidedInterfaceAssignment_5_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedServiceAssignment_6_2(), "rule__Component_Impl__ProvidedServiceAssignment_6_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedServiceAssignment_6_3_1(), "rule__Component_Impl__ProvidedServiceAssignment_6_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getBehaviourDescriptionAssignment_7_1(), "rule__Component_Impl__BehaviourDescriptionAssignment_7_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getCalledServicesAssignment_3_2(), "rule__BehaviorDescription__CalledServicesAssignment_3_2");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getCalledServicesAssignment_3_3_1(), "rule__BehaviorDescription__CalledServicesAssignment_3_3_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getInternalActionsAssignment_4_1(), "rule__BehaviorDescription__InternalActionsAssignment_4_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getLoopsAssignment_5_1(), "rule__BehaviorDescription__LoopsAssignment_5_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getBranchesAssignment_6_1(), "rule__BehaviorDescription__BranchesAssignment_6_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getNameAssignment_1(), "rule__CompositeComponent__NameAssignment_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredInterfaceAssignment_3_2(), "rule__CompositeComponent__RequiredInterfaceAssignment_3_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredInterfaceAssignment_3_3_1(), "rule__CompositeComponent__RequiredInterfaceAssignment_3_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredServiceAssignment_4_2(), "rule__CompositeComponent__RequiredServiceAssignment_4_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredServiceAssignment_4_3_1(), "rule__CompositeComponent__RequiredServiceAssignment_4_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedInterfaceAssignment_5_2(), "rule__CompositeComponent__ProvidedInterfaceAssignment_5_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedInterfaceAssignment_5_3_1(), "rule__CompositeComponent__ProvidedInterfaceAssignment_5_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedServiceAssignment_6_2(), "rule__CompositeComponent__ProvidedServiceAssignment_6_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedServiceAssignment_6_3_1(), "rule__CompositeComponent__ProvidedServiceAssignment_6_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getBehaviourDescriptionAssignment_7_1(), "rule__CompositeComponent__BehaviourDescriptionAssignment_7_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getEncapsulatedAssemblyContextAssignment_8_1(), "rule__CompositeComponent__EncapsulatedAssemblyContextAssignment_8_1");
			builder.put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
			builder.put(grammarAccess.getServiceAccess().getCorrespondingSignatureAssignment_5(), "rule__Service__CorrespondingSignatureAssignment_5");
			builder.put(grammarAccess.getServiceAccess().getCorrespondingSignatureAssignment_6_1(), "rule__Service__CorrespondingSignatureAssignment_6_1");
			builder.put(grammarAccess.getInterfaceAccess().getNameAssignment_1(), "rule__Interface__NameAssignment_1");
			builder.put(grammarAccess.getInterfaceAccess().getSignatureAssignment_5(), "rule__Interface__SignatureAssignment_5");
			builder.put(grammarAccess.getInterfaceAccess().getSignatureAssignment_6_1(), "rule__Interface__SignatureAssignment_6_1");
			builder.put(grammarAccess.getSignatureAccess().getNameAssignment_1(), "rule__Signature__NameAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getReturnTypeAssignment_3_1(), "rule__Signature__ReturnTypeAssignment_3_1");
			builder.put(grammarAccess.getSignatureAccess().getParameterTypeAssignment_4_2(), "rule__Signature__ParameterTypeAssignment_4_2");
			builder.put(grammarAccess.getSignatureAccess().getParameterTypeAssignment_4_3_1(), "rule__Signature__ParameterTypeAssignment_4_3_1");
			builder.put(grammarAccess.getDelegationConnectorAccess().getRoleAssignment_3(), "rule__DelegationConnector__RoleAssignment_3");
			builder.put(grammarAccess.getDelegationConnectorAccess().getInterfaceAssignment_5(), "rule__DelegationConnector__InterfaceAssignment_5");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
