/*
 * generated by Xtext 2.17.0
 */
package blatt2.ide.contentassist.antlr;

import blatt2.ide.contentassist.antlr.internal.InternalBlatt2Parser;
import blatt2.services.Blatt2GrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class Blatt2Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(Blatt2GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, Blatt2GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup(), "rule__AllocationContext__Group__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_5(), "rule__AllocationContext__Group_5__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_7(), "rule__AllocationContext__Group_7__0");
			builder.put(grammarAccess.getAllocationContextAccess().getGroup_7_3(), "rule__AllocationContext__Group_7_3__0");
			builder.put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
			builder.put(grammarAccess.getContainerAccess().getGroup_6(), "rule__Container__Group_6__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup(), "rule__AssemblyContext__Group__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_3(), "rule__AssemblyContext__Group_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_3_3(), "rule__AssemblyContext__Group_3_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_6(), "rule__AssemblyContext__Group_6__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_6_3(), "rule__AssemblyContext__Group_6_3__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_7(), "rule__AssemblyContext__Group_7__0");
			builder.put(grammarAccess.getAssemblyContextAccess().getGroup_7_3(), "rule__AssemblyContext__Group_7_3__0");
			builder.put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
			builder.put(grammarAccess.getLinkAccess().getGroup_6(), "rule__Link__Group_6__0");
			builder.put(grammarAccess.getRoleAccess().getGroup(), "rule__Role__Group__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup(), "rule__Component_Impl__Group__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_3(), "rule__Component_Impl__Group_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_3_3(), "rule__Component_Impl__Group_3_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_7(), "rule__Component_Impl__Group_7__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_9(), "rule__Component_Impl__Group_9__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_9_3(), "rule__Component_Impl__Group_9_3__0");
			builder.put(grammarAccess.getComponent_ImplAccess().getGroup_13(), "rule__Component_Impl__Group_13__0");
			builder.put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
			builder.put(grammarAccess.getInterfaceAccess().getGroup_6(), "rule__Interface__Group_6__0");
			builder.put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
			builder.put(grammarAccess.getServiceAccess().getGroup_6(), "rule__Service__Group_6__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup(), "rule__BehaviorDescription__Group__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_3(), "rule__BehaviorDescription__Group_3__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_3_3(), "rule__BehaviorDescription__Group_3_3__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_4(), "rule__BehaviorDescription__Group_4__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_5(), "rule__BehaviorDescription__Group_5__0");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getGroup_6(), "rule__BehaviorDescription__Group_6__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup(), "rule__CompositeComponent__Group__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_3(), "rule__CompositeComponent__Group_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_3_3(), "rule__CompositeComponent__Group_3_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_7(), "rule__CompositeComponent__Group_7__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_9(), "rule__CompositeComponent__Group_9__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_9_3(), "rule__CompositeComponent__Group_9_3__0");
			builder.put(grammarAccess.getCompositeComponentAccess().getGroup_13(), "rule__CompositeComponent__Group_13__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_5(), "rule__Signature__Group_5__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup_5_3(), "rule__Signature__Group_5_3__0");
			builder.put(grammarAccess.getType_ImplAccess().getGroup(), "rule__Type_Impl__Group__0");
			builder.put(grammarAccess.getListAccess().getGroup(), "rule__List__Group__0");
			builder.put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup(), "rule__ComplexType__Group__0");
			builder.put(grammarAccess.getDateAccess().getGroup(), "rule__Date__Group__0");
			builder.put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
			builder.put(grammarAccess.getString0Access().getGroup(), "rule__String0__Group__0");
			builder.put(grammarAccess.getInt0Access().getGroup(), "rule__Int0__Group__0");
			builder.put(grammarAccess.getCharAccess().getGroup(), "rule__Char__Group__0");
			builder.put(grammarAccess.getLongAccess().getGroup(), "rule__Long__Group__0");
			builder.put(grammarAccess.getFloatAccess().getGroup(), "rule__Float__Group__0");
			builder.put(grammarAccess.getBooleanAccess().getGroup(), "rule__Boolean__Group__0");
			builder.put(grammarAccess.getVoidAccess().getGroup(), "rule__Void__Group__0");
			builder.put(grammarAccess.getInternalActionAccess().getGroup(), "rule__InternalAction__Group__0");
			builder.put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
			builder.put(grammarAccess.getBranchAccess().getGroup(), "rule__Branch__Group__0");
			builder.put(grammarAccess.getAllocationContextAccess().getAllocatedAssemblyContextAssignment_4(), "rule__AllocationContext__AllocatedAssemblyContextAssignment_4");
			builder.put(grammarAccess.getAllocationContextAccess().getAllocatedAssemblyContextAssignment_5_1(), "rule__AllocationContext__AllocatedAssemblyContextAssignment_5_1");
			builder.put(grammarAccess.getAllocationContextAccess().getTargetContainerAssignment_7_2(), "rule__AllocationContext__TargetContainerAssignment_7_2");
			builder.put(grammarAccess.getAllocationContextAccess().getTargetContainerAssignment_7_3_1(), "rule__AllocationContext__TargetContainerAssignment_7_3_1");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_1(), "rule__Container__NameAssignment_1");
			builder.put(grammarAccess.getContainerAccess().getLinksAssignment_5(), "rule__Container__LinksAssignment_5");
			builder.put(grammarAccess.getContainerAccess().getLinksAssignment_6_1(), "rule__Container__LinksAssignment_6_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getNameAssignment_1(), "rule__AssemblyContext__NameAssignment_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getRequiredRoleAssignment_3_2(), "rule__AssemblyContext__RequiredRoleAssignment_3_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getRequiredRoleAssignment_3_3_1(), "rule__AssemblyContext__RequiredRoleAssignment_3_3_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getAllocationContextAssignment_5(), "rule__AssemblyContext__AllocationContextAssignment_5");
			builder.put(grammarAccess.getAssemblyContextAccess().getProvidedRoleAssignment_6_2(), "rule__AssemblyContext__ProvidedRoleAssignment_6_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getProvidedRoleAssignment_6_3_1(), "rule__AssemblyContext__ProvidedRoleAssignment_6_3_1");
			builder.put(grammarAccess.getAssemblyContextAccess().getComponentAssignment_7_2(), "rule__AssemblyContext__ComponentAssignment_7_2");
			builder.put(grammarAccess.getAssemblyContextAccess().getComponentAssignment_7_3_1(), "rule__AssemblyContext__ComponentAssignment_7_3_1");
			builder.put(grammarAccess.getLinkAccess().getNameAssignment_1(), "rule__Link__NameAssignment_1");
			builder.put(grammarAccess.getLinkAccess().getLinkedContainersAssignment_5(), "rule__Link__LinkedContainersAssignment_5");
			builder.put(grammarAccess.getLinkAccess().getLinkedContainersAssignment_6_1(), "rule__Link__LinkedContainersAssignment_6_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getNameAssignment_1(), "rule__Component_Impl__NameAssignment_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredInterfaceAssignment_3_2(), "rule__Component_Impl__RequiredInterfaceAssignment_3_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredInterfaceAssignment_3_3_1(), "rule__Component_Impl__RequiredInterfaceAssignment_3_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredServiceAssignment_6(), "rule__Component_Impl__RequiredServiceAssignment_6");
			builder.put(grammarAccess.getComponent_ImplAccess().getRequiredServiceAssignment_7_1(), "rule__Component_Impl__RequiredServiceAssignment_7_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedInterfaceAssignment_9_2(), "rule__Component_Impl__ProvidedInterfaceAssignment_9_2");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedInterfaceAssignment_9_3_1(), "rule__Component_Impl__ProvidedInterfaceAssignment_9_3_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedServiceAssignment_12(), "rule__Component_Impl__ProvidedServiceAssignment_12");
			builder.put(grammarAccess.getComponent_ImplAccess().getProvidedServiceAssignment_13_1(), "rule__Component_Impl__ProvidedServiceAssignment_13_1");
			builder.put(grammarAccess.getComponent_ImplAccess().getBehaviourDescriptionAssignment_16(), "rule__Component_Impl__BehaviourDescriptionAssignment_16");
			builder.put(grammarAccess.getInterfaceAccess().getNameAssignment_1(), "rule__Interface__NameAssignment_1");
			builder.put(grammarAccess.getInterfaceAccess().getSignatureAssignment_5(), "rule__Interface__SignatureAssignment_5");
			builder.put(grammarAccess.getInterfaceAccess().getSignatureAssignment_6_1(), "rule__Interface__SignatureAssignment_6_1");
			builder.put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
			builder.put(grammarAccess.getServiceAccess().getCorrespondingSignatureAssignment_5(), "rule__Service__CorrespondingSignatureAssignment_5");
			builder.put(grammarAccess.getServiceAccess().getCorrespondingSignatureAssignment_6_1(), "rule__Service__CorrespondingSignatureAssignment_6_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getCalledServicesAssignment_3_2(), "rule__BehaviorDescription__CalledServicesAssignment_3_2");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getCalledServicesAssignment_3_3_1(), "rule__BehaviorDescription__CalledServicesAssignment_3_3_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getInternalActionsAssignment_4_1(), "rule__BehaviorDescription__InternalActionsAssignment_4_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getLoopsAssignment_5_1(), "rule__BehaviorDescription__LoopsAssignment_5_1");
			builder.put(grammarAccess.getBehaviorDescriptionAccess().getBranchesAssignment_6_1(), "rule__BehaviorDescription__BranchesAssignment_6_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getNameAssignment_1(), "rule__CompositeComponent__NameAssignment_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredInterfaceAssignment_3_2(), "rule__CompositeComponent__RequiredInterfaceAssignment_3_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredInterfaceAssignment_3_3_1(), "rule__CompositeComponent__RequiredInterfaceAssignment_3_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredServiceAssignment_6(), "rule__CompositeComponent__RequiredServiceAssignment_6");
			builder.put(grammarAccess.getCompositeComponentAccess().getRequiredServiceAssignment_7_1(), "rule__CompositeComponent__RequiredServiceAssignment_7_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedInterfaceAssignment_9_2(), "rule__CompositeComponent__ProvidedInterfaceAssignment_9_2");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedInterfaceAssignment_9_3_1(), "rule__CompositeComponent__ProvidedInterfaceAssignment_9_3_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedServiceAssignment_12(), "rule__CompositeComponent__ProvidedServiceAssignment_12");
			builder.put(grammarAccess.getCompositeComponentAccess().getProvidedServiceAssignment_13_1(), "rule__CompositeComponent__ProvidedServiceAssignment_13_1");
			builder.put(grammarAccess.getCompositeComponentAccess().getBehaviourDescriptionAssignment_16(), "rule__CompositeComponent__BehaviourDescriptionAssignment_16");
			builder.put(grammarAccess.getCompositeComponentAccess().getEncapsulatedAssemblyContextAssignment_18(), "rule__CompositeComponent__EncapsulatedAssemblyContextAssignment_18");
			builder.put(grammarAccess.getSignatureAccess().getNameAssignment_1(), "rule__Signature__NameAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getReturnTypeAssignment_4(), "rule__Signature__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getSignatureAccess().getParameterTypeAssignment_5_2(), "rule__Signature__ParameterTypeAssignment_5_2");
			builder.put(grammarAccess.getSignatureAccess().getParameterTypeAssignment_5_3_1(), "rule__Signature__ParameterTypeAssignment_5_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private Blatt2GrammarAccess grammarAccess;

	@Override
	protected InternalBlatt2Parser createParser() {
		InternalBlatt2Parser result = new InternalBlatt2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public Blatt2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Blatt2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
